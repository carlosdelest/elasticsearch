env:
  GITOPS_ENV: "${GITOPS_ENV:-dev}"
  GPCTL_CONFIG: "${GPCTL_CONFIG:-https://raw.githubusercontent.com/elastic/serverless-gitops/main/gen/gpctl/elasticsearch/dev.yaml}"
  SKIP_DOCKER: "true"
  BUILDKITE_DIR: ".buildkite"
  IMAGE_TAG: "git-${BUILDKITE_COMMIT:0:12}"
  ES_SERVERLESS_IMAGE: "${ES_SERVERLESS_IMAGE-docker.elastic.co/elasticsearch-ci/elasticsearch-serverless:${IMAGE_TAG}}"

# NOTE: This pipeline used to be shared with the pull request pipeline.
# PRs now use the steps defined in pipeline.pr.yml

steps:
  # TODO: We can remove this step and all of the related if statements once this code has been out for a few days and we can switch the pipeline in catalog-info without breaking all PRs
  - label: "Upload Pipeline: Dynamic pull request pipeline"
    command: ".buildkite/pipeline.pr.yml.sh | buildkite-agent pipeline upload"
    if: pipeline.slug == "elasticsearch-serverless-pull-request" || pipeline.slug == "elasticsearch-serverless-es-pr-check"
    env:
      USE_GITHUB_CREDENTIALS: "true"

  - label: ":git: Validate elasticsearch submodule"
    command: ".buildkite/scripts/validate-submodule.sh"
    if: |
      pipeline.slug != "elasticsearch-serverless-pull-request" &&
        pipeline.slug != "elasticsearch-serverless-es-pr-check" &&
        (build.branch == "main" || build.branch == "patch/serverless-fix")

  - label: ":git: Build info"
    command: ".buildkite/scripts/show-build-info.sh"
    if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"

  - label: ":java: Run serverless Elasticsearch functional tests"
    if: build.env('GITOPS_ENV') == 'dev' && pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
    command: ".buildkite/scripts/run-gradle.sh check -Dtests.upgrade.skip=true"
    agents:
      provider: "gcp"
      machineType: "n1-standard-64"
      image: family/elasticsearch-ubuntu-2022
      buildDirectory: /dev/shm/bk
      zones: us-central1-a,us-central1-b,us-central1-c
    env:
      GRADLE_MAX_WORKERS: "10"
    notify:
      - github_commit_status:
          context: "elasticsearch-serverless/functional tests"

  - label: ":pipeline: :arrow_up: Upload upgrade test steps"
    command: ".buildkite/scripts/run-upgrade-tests.sh"
    if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"

  - label: ":s3: Run AWS S3 third party tests"
    if: build.env('GITOPS_ENV') == 'dev' && pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
    command: ".buildkite/scripts/run-s3-third-party-tests.sh"
    agents:
      provider: "gcp"
      machineType: "n1-standard-16"
      image: family/elasticsearch-ubuntu-2022
    notify:
      - github_commit_status:
          context: "elasticsearch-serverless/third party tests"

  - label: ":docker: Publish docker images"
    key: docker-publish
    cancel_on_build_failing: true
    command: ".buildkite/scripts/publish-docker-artifacts.sh"
    if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
    agents:
      provider: "gcp"
      machineType: "n1-standard-16"
      image: family/elasticsearch-ubuntu-2022

  - label: ":serverless: Run synthetics tests against Serverless dev env (elasticsearch:${BUILDKITE_COMMIT:0:12})"
    if: build.env('GITOPS_ENV') == 'dev' && (build.branch == 'main' || build.branch =~ /^patch\//) && pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
    trigger: serverless-devenv-synthetics
    depends_on: docker-publish
    build:
      env:
        SERVICE_OVERRIDES: "elasticsearch:${BUILDKITE_COMMIT:0:12}"

  - label: ":pipeline: Trigger Kibana E2E tests"
    if: build.env('GITOPS_ENV') == 'dev' && (build.branch == 'main' || build.branch =~ /^patch\//) && pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
    command: ".buildkite/scripts/run-e2e-kibana-tests.sh"
    agents:
      image: "docker.elastic.co/ci-agent-images/eck-region/buildkite-agent:1.5"
      memory: "4G"

  - group: ":k8s: Serverless end-to-end tests"
    steps:
      - label: ":aws: :java: Test newly created project"
        trigger: elasticsearch-serverless-e2e-tests-qa
        if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
        depends_on: docker-publish
        build:
          message: "${BUILDKITE_MESSAGE}"
          commit: "${BUILDKITE_COMMIT}"
          branch: "${BUILDKITE_BRANCH}"
          env:
            SKIP_DOCKER: "${SKIP_DOCKER}"
            DEPLOY_ID: "ess-e2e-ci-aws-${IMAGE_TAG}"
            REGION_ID: "aws-eu-west-1"
      - label: ":aws: :java: Test upgraded project"
        trigger: elasticsearch-serverless-e2e-tests-qa
        if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
        depends_on: docker-publish
        build:
          message: "${BUILDKITE_MESSAGE}"
          commit: "${BUILDKITE_COMMIT}"
          branch: "${BUILDKITE_BRANCH}"
          env:
            SKIP_DOCKER: "${SKIP_DOCKER}"
            UPGRADED_PROJECT: true
            DEPLOY_ID: "ess-e2e-ci-aws-upgrade-${IMAGE_TAG}"
            REGION_ID: "aws-eu-west-1"
            IMAGE_OVERRIDE: ""
      - label: ":azure: :java: Test newly created project"
        trigger: elasticsearch-serverless-e2e-tests-qa
        if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
        depends_on: docker-publish
        build:
          message: "${BUILDKITE_MESSAGE}"
          commit: "${BUILDKITE_COMMIT}"
          branch: "${BUILDKITE_BRANCH}"
          env:
            DEPLOY_ID: "ess-e2e-ci-azure-${IMAGE_TAG}"
            SKIP_DOCKER: "${SKIP_DOCKER}"
            REGION_ID: "azure-eastus2"
      - label: ":azure: :java: Test upgraded project"
        trigger: elasticsearch-serverless-e2e-tests-qa
        if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
        depends_on: docker-publish
        build:
          message: "${BUILDKITE_MESSAGE}"
          commit: "${BUILDKITE_COMMIT}"
          branch: "${BUILDKITE_BRANCH}"
          env:
            SKIP_DOCKER: "${SKIP_DOCKER}"
            UPGRADED_PROJECT: true
            DEPLOY_ID: "ess-e2e-ci-azure-upgrade-${IMAGE_TAG}"
            REGION_ID: "azure-eastus2"
            IMAGE_OVERRIDE: ""
      - label: ":gcp: :java: Test newly created project"
        trigger: elasticsearch-serverless-e2e-tests-qa
        if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
        depends_on: docker-publish
        build:
          message: "${BUILDKITE_MESSAGE}"
          commit: "${BUILDKITE_COMMIT}"
          branch: "${BUILDKITE_BRANCH}"
          env:
            DEPLOY_ID: "ess-e2e-ci-gcp-${IMAGE_TAG}"
            SKIP_DOCKER: "${SKIP_DOCKER}"
            REGION_ID: "gcp-us-central1"
      - label: ":gcp: :java: Test upgraded project"
        trigger: elasticsearch-serverless-e2e-tests-qa
        if: pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
        depends_on: docker-publish
        build:
          message: "${BUILDKITE_MESSAGE}"
          commit: "${BUILDKITE_COMMIT}"
          branch: "${BUILDKITE_BRANCH}"
          env:
            SKIP_DOCKER: "${SKIP_DOCKER}"
            UPGRADED_PROJECT: true
            DEPLOY_ID: "ess-e2e-ci-gcp-upgrade-${IMAGE_TAG}"
            REGION_ID: "gcp-us-central1"
            IMAGE_OVERRIDE: ""
    notify:
      - github_commit_status:
          context: "elasticsearch-serverless/e2e tests"

  - wait: ~

  - label: ":argo: Promote build using gpctl"
    trigger: gpctl-promote
    if: (build.env('GITOPS_ENV') != 'dev' || build.branch == 'main') && pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
    build:
      env:
        REMOTE_SERVICE_CONFIG: $GPCTL_CONFIG
        SERVICE_COMMIT_HASH: $BUILDKITE_COMMIT

  - label: ":git: Push promoted build tags"
    if: build.env('GITOPS_ENV') == 'dev' && build.branch == 'main' && pipeline.slug != "elasticsearch-serverless-pull-request" && pipeline.slug != "elasticsearch-serverless-es-pr-check"
    env:
      USE_GITHUB_CREDENTIALS: "true"
    command: ".buildkite/scripts/tag-promoted-commit.sh"
    agents:
      provider: "gcp"
      machineType: "n1-standard-4"
      image: family/elasticsearch-ubuntu-2022
