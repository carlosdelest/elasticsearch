stateless.enabled: true
search.query_phase_parallel_collection_enabled: true
logger.org.elasticsearch.repositories.s3.S3RequestRetryStats: DEBUG

# allow more concurrent recoveries in serverless, since we wait for object store during recovery.
cluster.routing.allocation.node_concurrent_recoveries: 10
# also raise this for same reason, though we accept that translog replay may take a short while, requiring mainly
# CPU/IO.
cluster.routing.allocation.node_initial_primaries_recoveries: 10
# increase to 5K in serverless. This is not unheard of on frozen, so should work. Also, stats is not available to
# users so we have some control. Finally, if this does not work, we would likely like to investigate it.
cluster.max_shards_per_node: 5000

# New default value for target merge factor after rollover in order to reduce heap usage of open readers
# May want to revisit after ES-7337
data_streams.lifecycle.target.merge.policy.merge_factor: 8

# Lower max. merged segment default size for time-based indices to avoid exceeding the disk space on small indexing
#  node instances
indices.merge.policy.max_time_based_merged_segment: 20gb

# TEMPORARY: until CP-3935 is resolved, the controller will force kill nodes shutting down after 10 minutes
# this override temporarily sets the ES timeout to less than 10 minutes so that we ensure (1) that we log that
# we breached the timeout and (2) that the polling aligns so that we don't timeout just before the last
# poll can actually run.
serverless.sigterm.timeout: 590s
serverless.sigterm.poll_interval: 59s

# Remediation for ES-7057; caches the last successfully loaded role mappings and returns these if security index
# is unavailable
xpack.security.authz.store.role_mappings.last_load_cache.enabled: true

tracing.apm.agent.server_url: http://apm-server.elastic-agent:8200
telemetry.metrics.enabled: true
tracing.apm.agent.metrics_interval: 60s
tracing.apm.enabled: true
tracing.apm.agent.transaction_sample_rate: 0.10

# Enforce that profiling is turned off by default in Serverless and needs to be turned on explicitly (will only happen
# for observability projects).
xpack.profiling.enabled: false

# Shards always recover from the object store in Serverless
indices.recovery.use_snapshots: false
