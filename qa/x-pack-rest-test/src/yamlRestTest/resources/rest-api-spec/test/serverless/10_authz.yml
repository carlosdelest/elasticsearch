---
setup:
  - skip:
      features: headers

  - do:
      cluster.health:
        wait_for_status: yellow

  - do:
      indices.create:
        index: only_write
        body:
          settings:
            index:
              number_of_shards: 1
              number_of_replicas: 1
          mappings:
            properties:
              name:
                type: "keyword"

  - do:
      indices.create:
        index: only_read
        body:
          settings:
            index:
              number_of_shards: 1
              number_of_replicas: 1
          mappings:
            properties:
              name:
                type: "keyword"

---
"Test wait_for a refresh of new doc":

  - do:
      security.create_api_key:
        body: >
          {
            "name": "write_only_api_key",
            "role_descriptors": {
              "write_only": {
                "indices": [
                  { "names": ["only_write"], "privileges": ["write"] },
                  { "names": ["only_read"], "privileges": ["read"] }
                ]
              }
            }
          }
  - set:
      id: api_key_id
      encoded: api_key_cred

  - do:
      headers: { Authorization: "ApiKey ${api_key_cred}" }
      create:
        id: "1"
        index: only_write
        body: >
          {
            "name" : "doc1"
          }

  - do:
      headers: { Authorization: "ApiKey ${api_key_cred}" }
      create:
        id: "2"
        index: only_write
        refresh: 'wait_for'
        body: >
          {
            "name" : "doc2"
          }

  - do:
      # Writing to an index with only read privileges should fail with a 403 forbidden
      # (We do this so that we can be confident that the above tests didn't accidentally pass due to excessive permissions)
      # Note: In the YAML test runner a "catch" requires that the exception is actually throw (it's not an "ignore")
      catch: forbidden
      headers: { Authorization: "ApiKey ${api_key_cred}" }
      create:
        id: "3"
        index: only_read
        body: >
          {
            "name" : "doc3-fail"
          }
