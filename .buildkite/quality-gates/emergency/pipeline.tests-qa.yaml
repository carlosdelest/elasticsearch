# These pipeline steps constitute the quality gate for your service within the QA environment.
# Incorporate any necessary additional logic to validate the service's integrity. A failure in
# this pipeline build will prevent further progression to the subsequent stage.

steps:
  - group: "Run quality gates"
    key: quality-gates
    steps:
      - label: ":pipeline: Trigger Elasticsearch E2E tests in QA"
        trigger: elasticsearch-serverless-e2e-tests-qa
        soft_fail: true
        build:
          message: "${BUILDKITE_MESSAGE}"
          commit: "${BUILDKITE_COMMIT}"
          branch: "${BUILDKITE_BRANCH}"
          env:
            IMAGE_OVERRIDE: ""

      - label: ":java: Verify upgrade from current staging"
        command: ".buildkite/scripts/run-gradle.sh bwcTest -Dtests.bwc.tag=current_staging"
        soft_fail: true
        agents:
          provider: "gcp"
          machineType: "n1-standard-16"
          image: family/elasticsearch-ubuntu-2022

      - label: ":kibana: Kibana serverless tests"
        trigger: appex-qa-serverless-kibana-ftr-tests # https://buildkite.com/elastic/appex-qa-serverless-kibana-ftr-tests
        soft_fail: true
        build:
          env:
            ENVIRONMENT: qa
            EC_ENV: qa
            EC_REGION: aws-eu-west-1
            RETRY_TESTS_ON_FAIL: "true"
          message: "${BUILDKITE_MESSAGE} (triggered by Elasticsearch QA quality gate)"
      - label: ":hourglass: Wait 30 minutes for environment health metrics"
        soft_fail: true
        key: bake_period
        command: ".buildkite/scripts/baking-period.sh"
        env:
          GATE_WAIT_PERIOD: ${QA_GATE_WAIT_PERIOD:-1800}
      - label: ":pipeline: Trigger Elasticsearch observability checks in QA"
        depends_on: bake_period
        trigger: serverless-quality-gates
        soft_fail: true
        build:
          message: "${BUILDKITE_MESSAGE}"
          env:
            TARGET_ENV: qa
            SERVICE: elasticsearch
            SERVICE_REPOSITORY: docker.elastic.co/elasticsearch-ci/elasticsearch-serverless
            SERVICE_VERSION: ${SERVICE_VERSION:0:12}
            SERVICE_TYPE_FIELD: data_stream.dataset
            ELASTICSEARCH_CHECK_LOG_ERROR_RATE: true
            MAX_ERROR_PERCENT: 0.2
            LOG_LEVEL_ERROR_VALUE: ERROR
            CHECK_ELASTICSEARCH_RED_HEALTH_RATE: true
            MAX_ELASTICSEARCH_RED_HEALTH_PERCENT: 0.15
            CHANNEL: ${CHANNEL:-default}
            QUERY_WINDOW: 30m
            CHECK_ALERTS: true
            CHECK_SLO: true
            CHECK_SLO_TAG: "quality-gate"
            CHECK_ALERTS_OF_UPDATED_CLUSTERS: true
            CHECK_ALERTS_TRANSIENT_LOOKBACK: 30m # 30 minutes is the default lookback for transient alerts
            DEPLOYMENT_SLICES: ${DEPLOYMENT_SLICES:-""}
