// Tests to validate maps as inputs to functions, these functions are under snapshot only

mapCountEval
required_capability: optional_named_argument_map_for_function
ROW x = 1
| EVAL c = map_count({"option1":"value1", "option2":2, "option3":3.0, "option4":true, "option5":[3.0, 4.0]})
;

x:integer |c:long
1         |5
;

mapCountWhereTrue
required_capability: optional_named_argument_map_for_function
ROW x = 1
| WHERE map_count({"option1":"value1", "option2":2, "option3":3.0, "option4":true, "option5":[1, 2]}) > 0
;

x:integer
1
;

mapCountWhereFalse
required_capability: optional_named_argument_map_for_function
ROW x = 1
| WHERE map_count({"option1":"value1", "option2":2, "option3":3.0, "option4":true, "option5":["a", "b"]}) < 0
;

x:integer
;

mapCountSort
required_capability: optional_named_argument_map_for_function
ROW x = 1
| SORT map_count({"option1":"value1", "option2":2, "option3":3.0, "option4":true, "option5":[true, false]})
;

x:integer
1
;

mapCountStats
required_capability: optional_named_argument_map_for_function
ROW x = 1
| STATS c = count(*) BY map_count({"option1":"value1", "option2":2, "option3":3.0, "option4":true, "option5":[3.0, 4.0]})
| KEEP c
;

c:long
1
;

logWithBaseInMapEval
required_capability: optional_named_argument_map_for_function
ROW value = 8.0
| EVAL l = log_with_base_in_map(value, {"base":2.0})
;

value: double |l:double
8.0           |3.0
;

logWithBaseInMapEvalIndex
required_capability: optional_named_argument_map_for_function
FROM employees
| WHERE emp_no IN (10001, 10003)
| EVAL l = log_with_base_in_map(languages, {"base":2.0})
| KEEP emp_no, languages, l
| SORT emp_no
;

emp_no:integer |languages:integer |l:double
10001          |2                 |1.0
10003          |4                 |2.0
;

logWithBaseInMapWhereTrueIndex
required_capability: optional_named_argument_map_for_function
FROM employees
| WHERE emp_no IN (10001, 10003) AND log_with_base_in_map(languages, {"base":2.0}) > 1
| KEEP emp_no, languages
| SORT emp_no
;

emp_no:integer |languages:integer
10003          |4
;

logWithBaseInMapWhereFalseIndex
required_capability: optional_named_argument_map_for_function
FROM employees
| WHERE emp_no IN (10001, 10003) AND log_with_base_in_map(languages, {"base":2.0}) < 0
| KEEP emp_no, languages
| SORT emp_no
;

emp_no:integer |languages:integer
;

logWithBaseInMapSortIndex
required_capability: optional_named_argument_map_for_function
FROM employees
| WHERE emp_no IN (10001, 10003)
| SORT log_with_base_in_map(languages, {"base":2.0}) desc
| KEEP emp_no
;

emp_no:integer
10003
10001
;
