# This pipeline serves as the entry point for your service's quality gates definitions. When
# properly configured, it will be invoked automatically as part of the automated
# promotion process once a new version was rolled out in one of the various cloud stages.
#
# The updated environment is provided via ENVIRONMENT variable. The seedling
# step will branch and execute pipeline snippets at the following location:
# .buildkite/quality-gates/pipeline.tests-qa.yaml
# .buildkite/quality-gates/pipeline.tests-staging.yaml
# .buildkite/quality-gates/pipeline.tests-production.yaml
#
# Docs: https://docs.elastic.dev/serverless/qualitygates

env:
  ENVIRONMENT: ${ENVIRONMENT?}
  DEPLOYMENT_SLICES: ${DEPLOYMENT_SLICES:-""}
  TEAM_CHANNEL: "#es-serverless-gitops"
  ALERT_CHANNEL: "#es-serverless-alerts-${ENVIRONMENT}"

steps:
  - label: ":pipeline: Upload quality gate steps"
    env:
      QG_PIPELINE_LOCATION: ".buildkite/quality-gates"
    command: "make -C /agent run-environment-tests"
    agents:
      image: "docker.elastic.co/ci-agent-images/quality-gate-seedling:0.0.4"

  - label: ":question: Maybe add manual gate"
    if: build.env("ENVIRONMENT") != "production-noncanary"
    depends_on: quality-gates
    command: ".buildkite/scripts/upload-manual-gate.sh"

  - label: ":git: Push promoted build tags"
    branches: "main patch/*"
    env:
      USE_GITHUB_CREDENTIALS: "true"
      GITOPS_ENV: "${ENVIRONMENT}"
    command: ".buildkite/scripts/tag-promoted-commit.sh"
    agents:
      provider: "gcp"
      machineType: "n1-standard-16"
      image: family/elasticsearch-ubuntu-2022

  - label: ":elasticsearch: Annotate promotion in O11y dashboards"
    command: ".buildkite/scripts/annotate-promotion.sh"

notify:
  - slack:
      channels:
        - "${TEAM_CHANNEL?}"
        - "#es-search-engine-serverless-alerts"
        - "#es-datastore-serverless-alerts"
    if: (build.branch == "main" || build.branch =~ /^patch\//) && build.state == "failed"

