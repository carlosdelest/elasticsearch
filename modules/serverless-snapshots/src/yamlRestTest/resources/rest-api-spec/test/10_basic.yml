setup:
  - do:
      indices.create:
        index: test_index_1
        body:
          settings:
            number_of_shards: 2
            number_of_replicas: 1
          mappings:
            properties:
              text:
                type: text
              keyword:
                type: keyword

  - do:
      index:
        index: test_index_1
        id: "1"
        body:
          text: "term term"
          keyword: "other"

  - do:
      indices.refresh:
        index: test_index_1

  - do:
      snapshot.create_repository:
        repository: test_repo_1
        body:
          type: fs
          settings:
            location: "test_repo_1_loc"

  # the funny naming on these snapshots is to avoid having alphabetical order and start_time order be the same

  - do:
      snapshot.create:
        repository: test_repo_1
        snapshot: test_snapshot_z_1
        wait_for_completion: true

  - do:
      snapshot.create:
        repository: test_repo_1
        snapshot: test_snapshot_a_2
        wait_for_completion: true

---
"Restore a project from a specific snapshot":
  - do: # create a new index *after* the most recent snapshot was taken, it will be destroyed by the restore operation
      indices.create:
        index: test_index_2

  - do:
      indices.get:
        index: test_index_*
  - is_true: test_index_1
  - is_true: test_index_2

  - do: # manually delete an index to simulate some sort of data loss
      indices.delete:
        index: test_index_1

  - do:
      indices.get:
        index: test_index_*
  - is_false: test_index_1 # this index was deleted
  - is_true: test_index_2

  - do:
      snapshot.restore_project:
        repository: test_repo_1
        snapshot: test_snapshot_z_1

  - match: { snapshot.snapshot: test_snapshot_z_1 }
  - match: { snapshot.shards.successful: 2 } # 2 for test_index_1
  - match: { snapshot.shards.failed : 0 }

  - do:
      indices.get:
        index: test_index_*
  - is_true: test_index_1
  - is_false: test_index_2 # restoring a project is destructive, this index is *gone*

---
"Restore a project from the latest successful snapshot":
  - skip:
      version: all
      reason: AwaitsFix https://github.com/elastic/elasticsearch-serverless/issues/1592

  - do:
      snapshot.restore_project:
        repository: test_repo_1
        snapshot: _latest_success

  - match: { snapshot.snapshot: test_snapshot_a_2 } # test_snapshot_a_2 is the latest successful snapshot
  - match: { snapshot.shards.successful: 2 } # 2 for test_index_1
  - match: { snapshot.shards.failed : 0 }

  - do:
      indices.get:
        index: test_index_*
  - is_true: test_index_1
