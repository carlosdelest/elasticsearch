stateless.enabled: true
search.query_phase_parallel_collection_enabled: true
logger.org.elasticsearch.repositories.s3.S3RequestRetryStats: DEBUG
# TODO remove the following line once we are confident that there are no file deletions issues
logger.stateless.object_store.shard_files_deletes: DEBUG

# allow more concurrent recoveries in serverless, since we wait for object store during recovery.
cluster.routing.allocation.node_concurrent_recoveries: 10
# also raise this for same reason, though we accept that translog replay may take a short while, requiring mainly
# CPU/IO.
cluster.routing.allocation.node_initial_primaries_recoveries: 10
# increase to 5K in serverless. This is not unheard of on frozen, so should work. Also, stats is not available to
# users so we have some control. Finally, if this does not work, we would likely like to investigate it.
cluster.max_shards_per_node: 5000

# New default value for target merge factor after rollover in order to reduce heap usage of open readers
# May want to revisit after ES-7337
data_streams.lifecycle.target.merge.policy.merge_factor: 8

# Lower max. merged segment default size for time-based indices to avoid exceeding the disk space on small indexing
#  node instances
indices.merge.policy.max_time_based_merged_segment: 20gb

# Force-termination happens after 1h, see ES-8164, so if we haven't shut down
# by then we try and time out just before that in order to record the failure
# in the logs.
serverless.sigterm.timeout: 3590s

serverless.sigterm.poll_interval: 30s

# Remediation for ES-7057; caches the last successfully loaded role mappings and returns these if security index
# is unavailable
xpack.security.authz.store.role_mappings.last_load_cache.enabled: true

telemetry.agent.server_url: http://apm-server.elastic-agent:8200
telemetry.metrics.enabled: true
telemetry.agent.metrics_interval: 60s
telemetry.tracing.enabled: true
telemetry.agent.transaction_sample_rate: 0.10

# Enforce that profiling is turned off by default in Serverless and needs to be turned on explicitly (will only happen
# for observability projects).
xpack.profiling.enabled: false

# Shards always recover from the object store in Serverless
indices.recovery.use_snapshots: false

# In serverless the network will promptly report failures so we don't need to
# rely on the application-level cluster coordination timeouts to remove
# disconnected nodes from the cluster. If a node remains connected but is slow
# to respond then that's a bug for which removing the node from the cluster is
# almost certainly going to make things worse.
cluster.fault_detection.follower_check.timeout: 20m
cluster.follower_lag.timeout: 1h

# Lots of threads read from the blob store in parallel, and we don't want any
# of them to fail just because the connection pool is exhausted. See comments
# on ES-8103 for the current (at time of writing) threadpool sizes for
# different node sizes. This value just has to be large enough to accommodate
# one connection per thread, it's ok if we set it to a larger value.
s3.client.default.max_connections: 150
