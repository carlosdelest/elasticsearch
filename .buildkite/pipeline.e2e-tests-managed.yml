agents:
  provider: k8s
  image: "docker.elastic.co/ci-agent-images/eck-region/buildkite-agent:1.5"
  memory: "4G"

env:
  BUILDKITE_DIR: ".buildkite"
  IMAGE_TAG: "${IMAGE_TAG:-git-${BUILDKITE_COMMIT:0:12}}"
  DEPLOY_ID: "${DEPLOY_ID:-ess-e2e-ci-${IMAGE_TAG}}"
  VAULT_PATH_API_KEY: "${VAULT_PATH_API_KEY}"
  ENV_URL: "${ENV_URL}"
  AWS_REGION: "${AWS_REGION}"
  TEST_ENV: "${TEST_ENV}"
  IMAGE_OVERRIDE: "${IMAGE_OVERRIDE}"
  SKIP_DOCKER: "${SKIP_DOCKER:-false}"

steps:
  - label: ":docker: Publish docker test images"
    trigger: elasticsearch-serverless-publish-docker
    if: build.env('IMAGE_OVERRIDE') != "" && build.env('SKIP_DOCKER') != "true"
    key: docker-publish
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      env:
        IMAGE_TAG: "${IMAGE_TAG}"

  - wait: ~

  - label: ":k8s: Deploy serverless Elasticsearch"
    command: "$$BUILDKITE_DIR/scripts/deploy-managed.sh"
    key: deploy-ess

  - label: ":java: Run serverless e2e tests"
    key: run-ess-e2e-tests
    agents:
      provider: "gcp"
      machineType: "n1-standard-16"
      image: family/elasticsearch-ubuntu-2022
    command:
      "vault read -field private-key secret/ci/elastic-elasticsearch-serverless/ess-delivery-ci-encryption > key.pem; \
         export ESS_PUBLIC_URL=$(buildkite-agent meta-data get ess-public-url); \
         export ESS_PROJECT_ID=$(buildkite-agent meta-data get ess-project-id); \
         export ESS_USERNAME=$(buildkite-agent meta-data get ess-username); \
         export ESS_PASSWORD=$(buildkite-agent meta-data get ess-password-encrypted | openssl base64 -d | openssl pkeyutl -decrypt -inkey key.pem); \
        .buildkite/scripts/run-gradle.sh :qa:e2e-test:javaRestTest"
    depends_on:
      - step: deploy-ess

  - label: ":k8s: Undeploy deployment from ${TEST_ENV}"
    key: undeploy-ess
    command: "$$BUILDKITE_DIR/scripts/undeploy-managed.sh"
    depends_on:
      - step: run-ess-e2e-tests
    allow_dependency_failure: true
