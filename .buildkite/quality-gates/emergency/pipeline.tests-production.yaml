# These pipeline steps constitute the quality gate for your service within the production environment.
# Incorporate any necessary additional logic to validate the service's integrity. A failure in
# this pipeline build will prevent further progression to the subsequent stage.

env:
  DISABLE_PATCH_MERGE: ${DISABLE_PATCH_MERGE:-"false"}

steps:
  - group: "Run quality gates"
    key: quality-gates
    steps:
      - label: ":hourglass: Wait 1 hour for environment health metrics"
        if: build.env("ENVIRONMENT") == "production-canary"
        soft_fail: true
        key: production_bake_period
        command: ".buildkite/scripts/baking-period.sh"
        env:
          GATE_WAIT_PERIOD: ${PROD_CANARY_GATE_WAIT_PERIOD:-3600}

      - label: ":pipeline: Trigger Elasticsearch observability checks in canary"
        # For now, deploying using the 'all' deployment type algo in production-canary
        if: build.env("ENVIRONMENT") == "production-canary"
        depends_on: production_bake_period
        soft_fail: true
        trigger: serverless-quality-gates
        build:
          message: "${BUILDKITE_MESSAGE}"
          env:
            TARGET_ENV: ${ENVIRONMENT}
            ELASTICSEARCH_CHECK_LOG_ERROR_RATE: true
            MAX_ERROR_PERCENT: 0.002
            QUERY_WINDOW: 60m
            LOG_LEVEL_ERROR_VALUE: ERROR
            SERVICE: elasticsearch
            SERVICE_REPOSITORY: docker.elastic.co/elasticsearch-ci/elasticsearch-serverless
            SERVICE_VERSION: ${SERVICE_VERSION:0:12}
            SERVICE_TYPE_FIELD: data_stream.dataset
            CHECK_ELASTICSEARCH_RED_HEALTH_RATE: true
            MAX_ELASTICSEARCH_RED_HEALTH_PERCENT: 0.02
            CHECK_ALERTS: true
            CHECK_ALERTS_OF_UPDATED_CLUSTERS: true
            CHECK_ALERTS_TRANSIENT_LOOKBACK: 60m
            DEPLOYMENT_SLICES: ${DEPLOYMENT_SLICES:-""}

      - label: ":pipeline: Trigger Elasticsearch observability checks in noncanary"
        if: build.env("ENVIRONMENT") == "production-noncanary"
        depends_on: production_bake_period
        soft_fail: true
        key: production-noncanary-quality-gates
        trigger: serverless-quality-gates
        build:
          message: "${BUILDKITE_MESSAGE}"
          env:
            TARGET_ENV: ${ENVIRONMENT}
            SERVICE: elasticsearch
            SERVICE_REPOSITORY: docker.elastic.co/elasticsearch-ci/elasticsearch-serverless
            SERVICE_VERSION: ${SERVICE_VERSION:0:12}
            SERVICE_TYPE_FIELD: data_stream.dataset
            CHECK_ALERTS: true
            CHECK_ALERTS_OF_UPDATED_CLUSTERS: true
            CHECK_ALERTS_IGNORE_TRANSIENT: true
            DEPLOYMENT_SLICES: ${DEPLOYMENT_SLICES:-""}

      - label: ":git: Merge patch/serverless-fix branches to main"
        if: build.env("ENVIRONMENT") == "production-noncanary" && build.env("DISABLE_PATCH_MERGE") != "true"
        depends_on: production-noncanary-quality-gates
        command: ".buildkite/scripts/merge-patch-branches.sh"
        env:
          PROMOTED_COMMIT: ${SERVICE_VERSION}
